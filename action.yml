name: "ci-skip-detection"
description: "it takes all the commits of a push and it says if we skip or not the workflow run"

inputs:
  token:
    description: "It's the github classic token that has the right of your repository"
    required: true
  last-commit:
    description: "it's the last commit before the current push. You can have it with github.event.before"
    required: true
  new-commit:
    description: "the sha of the last commit of the current push. You can get it with github.sha "
    required: true

runs:
  using: "composite"
  steps: 
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Checkout external action repo
      uses: actions/checkout@v2
      with:
        repository: 'AdamBoukhari/ci-skip-action' 

    - name: Install dependencies
      run: pip install requests

    - name: Get commit messages via API
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        MESSAGES=$(python scripts/get_commits.py "${{ inputs.last-commit }}" "${{ inputs.new-commit }}")
        echo "messages=$MESSAGES" >> $GITHUB_ENV
  
    - name: Verif
      run: echo "$messages" | sed 's/%0A/\n/g'

    - name: Write commit messages to file
      run: echo "$messages" | sed 's/%0A/\n/g' > commit_messages.txt
 
    - name: Create result file
      run: touch $(pwd)/result.txt
  
    - name: Build and run Docker container
      run: |
        docker build -t my-ia-image -f docker/DOCKERFILE .
        docker run -v $(pwd)/commit_messages.txt:/app/commit_messages.txt -v $(pwd)/result.txt:/app/result.txt my-ia-image
 
    - name: Determine if we should skip subsequent jobs
      id: check_skip
      run: |
        result=$(cat result.txt)
        echo $result
        if [[ "$result" == "skip" ]]; then
            echo "skip=1" >> $GITHUB_OUTPUT
        else
            echo "skip=0" >> $GITHUB_OUTPUT 
        fi
 